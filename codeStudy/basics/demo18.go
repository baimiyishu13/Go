package main

import "fmt"

func main() {
	/*
		二进制 0 和 1，逢二进一
		位运算：二进制上的	0：false 1：true
		& : 都是1结果为1，否则是0
		| : 都是0结果为0，否则是1
		60: 0011 1100
		13: 0000 1101
		-------------
		&	0000 1100	同时满足
		|	0011 1101	一个满足
		^   0011 0001	不同为1，相同为0（异或）
	*/
	var a uint = 60
	var b uint = 13
	//位运算
	var c uint
	c = a & b                       //位运算
	fmt.Printf("%d,二进制：%b\n", c, c) //12,二进制：1100;%.8d显示8位

	c = a | b                       //位运算
	fmt.Printf("%d,二进制：%b\n", c, c) //61,二进制：111101

	c = a ^ b                       //位运算
	fmt.Printf("%d,二进制：%b\n", c, c) //49,二进制：110001

	c = a >> 2                      //位运算
	fmt.Printf("%d,二进制：%b\n", c, c) //15,二进制：1111

	c = a << 2                      //位运算
	fmt.Printf("%d,二进制：%b\n", c, c) //240,二进制：11110000

}
